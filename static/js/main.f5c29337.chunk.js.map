{"version":3,"sources":["components/ParameterPannel.js","components/ChordTable.js","components/ScaleNotes.js","components/BaseNotes.js","containers/App.js","index.js"],"names":["ParameterPannel","props","className","Grid","container","spacing","direction","item","xs","Fragment","FormControl","variant","style","width","padding","InputLabel","id","Select","labelId","value","keySignature","onChange","handleKeyChangeEvent","MenuItem","progression","handleProgressionChangeEvent","polySynth","Synth","toMaster","PolySynth","toDestination","ChordTable","useState","track","setTrack","useEffect","chords","Progression","fromRomanNumerals","calibratedChords","forEach","chord","push","notes","Chord","map","x","chordProgressionRow","i","length","Paper","textAlign","color","onClick","duration","chordNotes","console","log","triggerAttackRelease","handlePlayChord","flexGrow","synth","ScaleNotes","setNotes","Scale","scale","scaleName","notesRow","note","BaseNotes","handlePlayNote","App","setKeySignature","setProgression","e","target","split","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f5c29337.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\n\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\n\nimport { Tonal, Scale, Progression, Mode, Chord, Key } from '@tonaljs/modules'\n\nfunction ParameterPannel(props) {\n  return (\n    <div className=\"flex flex-column\">\n      <Grid container spacing={1} direction={'column'}>\n        <Grid container item xs={12} spacing={3} direction={'column'}>\n          <React.Fragment>\n            <Grid item xs={3}>\n              <FormControl variant=\"outlined\" style={{ width: '120px', padding: '10px' }}>\n                <InputLabel id=\"select-outlined-label\">Key</InputLabel>\n                <Select\n                  labelId=\"select-outlined-label\"\n                  id=\"select-outlined\"\n                  value={props.keySignature}\n                  onChange={props.handleKeyChangeEvent}\n                >\n                  <MenuItem value={'C'}>C Do </MenuItem>\n                  <MenuItem value={'D'}>D Re </MenuItem>\n                  <MenuItem value={'E'}>E Mi </MenuItem>\n                  <MenuItem value={'F'}>F Fa </MenuItem>\n                  <MenuItem value={'G'}>G Sol</MenuItem>\n                  <MenuItem value={'A'}>A La </MenuItem>\n                  <MenuItem value={'B'}>B Si </MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={3}>\n              <FormControl variant=\"outlined\" style={{ width: '250px', padding: '10px' }}>\n                <InputLabel id=\"select-outlined-label\">Chord Progression</InputLabel>\n                <Select\n                  labelId=\"select-outlined-label\"\n                  id=\"select-outlined\"\n                  value={props.progression}\n                  onChange={props.handleProgressionChangeEvent}\n                >\n                  <MenuItem value={'I - IV - V'}>I - IV - V</MenuItem>\n                  <MenuItem value={'I - V - VIm - IV'}>I – V – vi – IV (Optimistic)</MenuItem>\n                  <MenuItem value={'V - VIm - IV - I'}>V – vi – IV – I</MenuItem>\n                  <MenuItem value={'VIm - IV - I - V'}>vi – IV - I – V (Pessimistic)</MenuItem>\n                  <MenuItem value={'IV - I - V - VIm'}>IV - I – V - vi</MenuItem>\n                  <MenuItem value={'IV - V - IIIm - VIm'}>IV - V - iii - vi (J-Pop/Rock)</MenuItem>\n                  <MenuItem value={'I - VIm - IV - V'}>I – vi – IV – V ('50s)</MenuItem>\n                  <MenuItem value={'Im - VII - VI - V'}>i - VII - VI - V (Andalusian)</MenuItem>\n                  <MenuItem value={'IIm - V - I'}>ii – V – I</MenuItem>\n                  <MenuItem value={'I - V - VIm - IIIm - IV - I - IV - V'}>\n                    I – V – vi – iii – IV – I – IV – V\n                  </MenuItem>\n                  <MenuItem value={'I7 - VI7 - V7'}>I7 - VI7 - V7</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={3}></Grid>\n            <Grid item xs={3}></Grid>\n          </React.Fragment>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default ParameterPannel\n","import React, { useState, useEffect } from 'react'\n\n// import PropTypes from 'prop-types'\n\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\n\n// import { Tonal, Scale, Progression, Mode, Chord, Key } from '@tonaljs/modules'\nimport { Progression, Chord } from '@tonaljs/modules'\n\n// import MidiWriter from 'midi-writer-js'\n// import MidiPlayer from 'midi-player-js'\n\nimport { Synth, PolySynth, Part, Transport } from 'tone'\n\n// // create a synth and connect it to the master output (your speakers)\nconst synth = new Synth().toMaster()\n\n// pass in some initial values for the filter and filter envelope\n// const synth = new Tone.Synth({\n//   oscillator: {\n//     type: \"pwm\",\n//     modulationFrequency: 0.2\n//   },\n//   envelope: {\n//     attack: 0.02,\n//     decay: 0.1,\n//     sustain: 0.2,\n//     release: 0.9\n//   }\n// }).toMaster()\n\n// a 4 voice Synth\nconst polySynth = new PolySynth(Synth).toDestination()\n\nfunction ChordTable(props) {\n  const [track, setTrack] = useState([])\n\n  useEffect(() => {\n    const chords = Progression.fromRomanNumerals(props.keySignature, props.progression)\n    const calibratedChords = []\n    chords.forEach((chord) => {\n      calibratedChords.push({\n        chord: chord,\n        notes: Chord.chord(chord).notes.map((x) => x + '4'),\n      })\n    })\n\n    setTrack(calibratedChords)\n  }, [props.keySignature, props.progression])\n\n  function handlePlayChord(chord, duration) {\n    const chordNotes = Chord.chord(chord).notes.map((x) => x + '4')\n    console.log(`This chord ${chord} with notes ${chordNotes} is played for ${duration}.`)\n    return polySynth.triggerAttackRelease(chordNotes, duration)\n  }\n\n  function handlePlayChordInLoop(track, duration) {\n    // pass in an array of events\n    // var part = new Tone.Part(function (time, event) {\n    //   // the events will be given to the callback with the time they occur\n    //   // synth.triggerAttackRelease(event.note, event.dur, time)\n    //   polySynth.triggerAttackRelease(event.chordNotes, event.duration, time)\n    // }, [\n    //   { time: 0, chordNotes: 'C4', duration: '4n' },\n    //   { time: { '4n': 1, '8n': 1 }, chordNotes: 'E4', duration: '8n' },\n    //   { time: '2n', chordNotes: 'G4', duration: '16n' },\n    //   { time: { '2n': 1, '8t': 1 }, chordNotes: 'B4', duration: '4n' }\n    // ])\n\n    var part = new Part(\n      function (time, event) {\n        // the events will be given to the callback with the time they occur\n        // synth.triggerAttackRelease(event.note, event.dur, time)\n        polySynth.triggerAttackRelease(event.chordNotes, event.duration, time)\n      },\n      [\n        { time: 0, chordNotes: track[0].chord, duration: '8n' },\n        {\n          time: { '4n': 1, '8n': 1 },\n          chordNotes: track[1].chord,\n          duration: '8n',\n        },\n        { time: '2n', chordNotes: track[2].chord, duration: '8n' },\n        {\n          time: { '2n': 1, '8t': 1 },\n          chordNotes: track[3].chord,\n          duration: '8n',\n        },\n      ],\n    )\n\n    console.log(track)\n\n    // start the part at the beginning of the Transport's timeline\n    part.start(0)\n\n    // loop the part 3 times\n    part.loop = 5\n    part.loopEnd = duration\n    // const chordNotes = Chord.chord(chord).notes.map(x => x + '4')\n    // console.log(`This chord ${chord} with notes ${chordNotes} is played for ${duration}.`)\n    // polySynth.triggerAttackRelease(chordNotes, duration)\n  }\n\n  var chordProgressionRow = []\n  for (let i = 0; i < track.length; i++) {\n    chordProgressionRow.push(\n      <Grid key={i} item xs={12 / track.length}>\n        <Paper\n          key={i}\n          style={{\n            textAlign: 'center',\n            color: 'grey',\n            padding: '20px',\n          }}\n          onClick={() => {\n            handlePlayChord(track[i].chord, '2n')\n          }}\n        >\n          Chord {track[i].chord} 2n\n        </Paper>\n      </Grid>,\n    )\n  }\n\n  return (\n    <div>\n      <div className={{ flexGrow: 1 }}>\n        <Grid container spacing={1}>\n          <Grid container item xs={12} spacing={3}>\n            <React.Fragment>{chordProgressionRow}</React.Fragment>\n          </Grid>\n          {/* <Grid container item xs={12} spacing={3}>\n            <React.Fragment>\n              <Grid item xs={12 / track.length}>\n                <Paper style={{\n                  textAlign: 'center',\n                  color: 'grey',\n                  padding: '20px'\n                }} onClick={() => { handlePlayChordInLoop(track, \"1m\") }}>Play in Loop</Paper>\n              </Grid>\n            </React.Fragment>\n            <React.Fragment>\n              <Grid item xs={12 / track.length}>\n                <Paper style={{\n                  textAlign: 'center',\n                  color: 'grey',\n                  padding: '20px'\n                }} onClick={() => { Transport.toggle() }}>Play in Loop</Paper>\n              </Grid>\n            </React.Fragment>\n          </Grid> */}\n        </Grid>\n      </div>\n    </div>\n  )\n}\n\nexport default ChordTable\n","import React, { useState, useEffect } from 'react'\n\n// import PropTypes from 'prop-types'\n\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\n\n// import { Tonal, Scale, Progression, Mode, Chord, Key } from '@tonaljs/modules'\nimport { Scale } from '@tonaljs/modules'\n\nimport { Synth, PolySynth } from 'tone'\n\n// // create a synth and connect it to the master output (your speakers)\nconst synth = new Synth().toMaster()\n\n// a 4 voice Synth\nconst polySynth = new PolySynth(Synth).toDestination()\n\nfunction ScaleNotes(props) {\n  const [notes, setNotes] = useState([])\n\n  useEffect(() => {\n    const notes = Scale.scale(`${props.keySignature}4 ${props.scaleName}`).notes\n    setNotes(notes)\n  }, [props.keySignature])\n\n  function handlePlayNote(note, duration) {\n    console.log(`This note ${note} is played for ${duration}.`)\n    synth.triggerAttackRelease(note, duration)\n  }\n\n  var notesRow = []\n  for (let i = 0; i < notes.length; i++) {\n    notesRow.push(\n      <Grid key={i} item xs={12 / notes.length}>\n        <Paper\n          key={i}\n          style={{\n            textAlign: 'center',\n            color: 'grey',\n            padding: '20px',\n          }}\n          onClick={() => {\n            handlePlayNote(notes[i], '8n')\n          }}\n        >\n          Note {notes[i]} 8n\n        </Paper>\n      </Grid>,\n    )\n  }\n\n  return (\n    <div>\n      <div className={{ flexGrow: 1 }}>\n        <Grid container spacing={1}>\n          <Grid container item xs={12} spacing={3}>\n            <React.Fragment>{notesRow}</React.Fragment>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  )\n}\n\nexport default ScaleNotes\n","import React, { useState, useEffect } from 'react'\n\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\n\n// import { Tonal, Scale, Progression, Mode, Chord, Key } from '@tonaljs/modules'\n\n// import MidiWriter from 'midi-writer-js'\n// import MidiPlayer from 'midi-player-js'\n\nimport { Synth, PolySynth } from 'tone'\n\n// // create a synth and connect it to the master output (your speakers)\nconst synth = new Synth().toMaster()\n\n// a 4 voice Synth\nconst polySynth = new PolySynth(Synth).toDestination()\n\nfunction BaseNotes(props) {\n  function handlePlayNote(note, duration) {\n    console.log(`This note ${note} is played for ${duration}.`)\n    synth.triggerAttackRelease(note, duration)\n  }\n\n  return (\n    <div className={{ flexGrow: 1 }}>\n      <Grid container spacing={1}>\n        <Grid container item xs={12} spacing={3}>\n          <React.Fragment>\n            <Grid item xs={3}>\n              <Paper\n                style={{\n                  textAlign: 'center',\n                  color: 'grey',\n                  padding: '20px',\n                }}\n                onClick={() => {\n                  handlePlayNote('C4', '8n')\n                }}\n              >\n                Note C4 8n\n              </Paper>\n            </Grid>\n            <Grid item xs={3}>\n              <Paper\n                style={{\n                  textAlign: 'center',\n                  color: 'grey',\n                  padding: '20px',\n                }}\n                onClick={() => {\n                  handlePlayNote('D4', '8n')\n                }}\n              >\n                Note D4 8n\n              </Paper>\n            </Grid>\n            <Grid item xs={3}>\n              <Paper\n                style={{\n                  textAlign: 'center',\n                  color: 'grey',\n                  padding: '20px',\n                }}\n                onClick={() => {\n                  handlePlayNote('E4', '8n')\n                }}\n              >\n                Note E4 8n\n              </Paper>\n            </Grid>\n            <Grid item xs={3}>\n              <Paper\n                style={{\n                  textAlign: 'center',\n                  color: 'grey',\n                  padding: '20px',\n                }}\n                onClick={() => {\n                  handlePlayNote('F4', '8n')\n                }}\n              >\n                Note F4 8n\n              </Paper>\n            </Grid>\n          </React.Fragment>\n        </Grid>\n        <Grid container item xs={12} spacing={3}>\n          <React.Fragment>\n            <Grid item xs={3}>\n              <Paper\n                style={{\n                  textAlign: 'center',\n                  color: 'grey',\n                  padding: '20px',\n                }}\n                onClick={() => {\n                  handlePlayNote('G4', '8n')\n                }}\n              >\n                Note G4 8n\n              </Paper>\n            </Grid>\n            <Grid item xs={3}>\n              <Paper\n                style={{\n                  textAlign: 'center',\n                  color: 'grey',\n                  padding: '20px',\n                }}\n                onClick={() => {\n                  handlePlayNote('A4', '8n')\n                }}\n              >\n                Note A4 8n\n              </Paper>\n            </Grid>\n            <Grid item xs={3}>\n              <Paper\n                style={{\n                  textAlign: 'center',\n                  color: 'grey',\n                  padding: '20px',\n                }}\n                onClick={() => {\n                  handlePlayNote('B4', '8n')\n                }}\n              >\n                Note B4 8n\n              </Paper>\n            </Grid>\n            <Grid item xs={3}>\n              <Paper\n                style={{\n                  textAlign: 'center',\n                  color: 'grey',\n                  padding: '20px',\n                }}\n                onClick={() => {\n                  handlePlayNote('C5', '8n')\n                }}\n              >\n                Note C5 8n\n              </Paper>\n            </Grid>\n          </React.Fragment>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default BaseNotes\n","import React, { useState } from 'react'\n\nimport ParameterPannel from '../components/ParameterPannel'\nimport ChordTable from '../components/ChordTable'\nimport ScaleNotes from '../components/ScaleNotes'\nimport BaseNotes from '../components/BaseNotes'\n\nfunction App() {\n  const [keySignature, setKeySignature] = useState('C')\n  const [progression, setProgression] = useState('IV - V - IIIm - VIm')\n\n  function handleKeyChangeEvent(e) {\n    setKeySignature(e.target.value)\n  }\n\n  function handleProgressionChangeEvent(e) {\n    setProgression(e.target.value)\n  }\n\n  return (\n    <div className=\"py2 px4 mx4 flex flex-row\">\n      <div className=\"py1 px2 flex flex-column\">\n        <h2>Choose your Key</h2>\n        <ParameterPannel\n          keySignature={keySignature}\n          handleKeyChangeEvent={handleKeyChangeEvent}\n          progression={progression}\n          handleProgressionChangeEvent={handleProgressionChangeEvent}\n        />\n      </div>\n      <div className=\"py1 px2 flex flex-column\">\n        <h2>Basic 4 Chords Progressions {progression}</h2>\n        <ChordTable keySignature={keySignature} progression={progression.split(' - ')} />\n        <h2>Major Scale Notes</h2>\n        <ScaleNotes keySignature={keySignature} scaleName={'major'} />\n        <h2>Minor Scale Notes</h2>\n        <ScaleNotes keySignature={keySignature} scaleName={'minor'} />\n        <h2>Basic C Major Scale Notes</h2>\n        <BaseNotes />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport './global.scss'\nimport App from './containers/App'\n// import * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister()\n"],"sourceRoot":""}