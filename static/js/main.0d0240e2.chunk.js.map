{"version":3,"sources":["components/ParameterPannel.js","components/ChordTable.js","components/ScaleNotes.js","components/BaseNotes.js","containers/App.js","index.js"],"names":["ParameterPannel","props","className","Grid","container","spacing","direction","item","xs","Fragment","FormControl","variant","style","width","padding","InputLabel","id","Select","labelId","value","keySignature","onChange","handleKeyChangeEvent","MenuItem","progression","handleProgressionChangeEvent","polySynth","Synth","toMaster","PolySynth","toDestination","ChordTable","useState","track","setTrack","useEffect","chords","Progression","fromRomanNumerals","calibratedChords","forEach","chord","push","notes","Chord","map","x","chordProgressionRow","i","key","length","Paper","textAlign","color","onClick","duration","chordNotes","console","log","triggerAttackRelease","handlePlayChord","flexGrow","synth","ScaleNotes","setNotes","Scale","scale","scaleName","notesRow","note","BaseNotes","handlePlayNote","App","setKeySignature","setProgression","e","target","split","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d0240e2.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nimport PropTypes from 'prop-types'\n\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\n\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\n\nimport { Tonal, Scale, Progression, Mode, Chord, Key } from '@tonaljs/modules'\n\nfunction ParameterPannel (props) {\n  return (\n\n    <div className='flex flex-column'>\n      <Grid container spacing={1} direction={\"column\"}>\n        <Grid container item xs={12} spacing={3} direction={\"column\"}>\n          <React.Fragment>\n            <Grid item xs={3}>\n              <FormControl variant=\"outlined\" style={{ width: '120px', padding: '10px' }}>\n                <InputLabel id=\"select-outlined-label\">Key</InputLabel>\n                <Select\n                  labelId=\"select-outlined-label\"\n                  id=\"select-outlined\"\n                  value={props.keySignature}\n                  onChange={props.handleKeyChangeEvent}\n                >\n                  <MenuItem value={'C'}>C Do </MenuItem>\n                  <MenuItem value={'D'}>D Re </MenuItem>\n                  <MenuItem value={'E'}>E Mi </MenuItem>\n                  <MenuItem value={'F'}>F Fa </MenuItem>\n                  <MenuItem value={'G'}>G Sol</MenuItem>\n                  <MenuItem value={'A'}>A La </MenuItem>\n                  <MenuItem value={'B'}>B Si </MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={3}>\n              <FormControl variant=\"outlined\" style={{ width: '250px', padding: '10px' }}>\n                <InputLabel id=\"select-outlined-label\">Chord Progression</InputLabel>\n                <Select\n                  labelId=\"select-outlined-label\"\n                  id=\"select-outlined\"\n                  value={props.progression}\n                  onChange={props.handleProgressionChangeEvent}\n                >\n                  <MenuItem value={'I - IV - V'}>I - IV - V</MenuItem>\n                  <MenuItem value={'I - V - VIm - IV'}>I – V – vi – IV</MenuItem>\n                  <MenuItem value={'VIm - IV - I - V'}>vi – IV - I – V</MenuItem>\n                  <MenuItem value={'IIm - V - I'}>ii – V – I</MenuItem>\n                  <MenuItem value={'I - V - VIm - iii - IV - I - IV - V'}>I – V – vi – iii – IV – I – IV – V</MenuItem>\n                  <MenuItem value={'I7 - VI7 - V7'}>I7 - VI7 - V7</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={3}>\n            </Grid>\n            <Grid item xs={3}>\n            </Grid>\n          </React.Fragment>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default ParameterPannel\n","import React, { useState, useEffect } from 'react'\n\n// import PropTypes from 'prop-types'\n\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\n\n// import { Tonal, Scale, Progression, Mode, Chord, Key } from '@tonaljs/modules'\nimport { Progression, Chord } from '@tonaljs/modules'\n\n// import MidiWriter from 'midi-writer-js'\n// import MidiPlayer from 'midi-player-js'\n\nimport { Synth, PolySynth, Part, Transport } from 'tone'\n\n// // create a synth and connect it to the master output (your speakers)\nconst synth = new Synth().toMaster()\n\n// pass in some initial values for the filter and filter envelope\n// const synth = new Tone.Synth({\n//   oscillator: {\n//     type: \"pwm\",\n//     modulationFrequency: 0.2\n//   },\n//   envelope: {\n//     attack: 0.02,\n//     decay: 0.1,\n//     sustain: 0.2,\n//     release: 0.9\n//   }\n// }).toMaster()\n\n// a 4 voice Synth\nconst polySynth = new PolySynth(Synth).toDestination()\n\nfunction ChordTable(props) {\n  const [track, setTrack] = useState([])\n\n  useEffect(() => {\n    const chords = Progression.fromRomanNumerals(\n      props.keySignature,\n      props.progression\n    )\n    const calibratedChords = []\n    chords.forEach((chord) => {\n      calibratedChords.push({\n        chord: chord,\n        notes: Chord.chord(chord).notes.map((x) => x + '4'),\n      })\n    })\n\n    setTrack(calibratedChords)\n  }, [props.keySignature, props.progression])\n\n  function handlePlayChord(chord, duration) {\n    const chordNotes = Chord.chord(chord).notes.map((x) => x + '4')\n    console.log(\n      `This chord ${chord} with notes ${chordNotes} is played for ${duration}.`\n    )\n    return polySynth.triggerAttackRelease(chordNotes, duration)\n  }\n\n  function handlePlayChordInLoop(track, duration) {\n    // pass in an array of events\n    // var part = new Tone.Part(function (time, event) {\n    //   // the events will be given to the callback with the time they occur\n    //   // synth.triggerAttackRelease(event.note, event.dur, time)\n    //   polySynth.triggerAttackRelease(event.chordNotes, event.duration, time)\n    // }, [\n    //   { time: 0, chordNotes: 'C4', duration: '4n' },\n    //   { time: { '4n': 1, '8n': 1 }, chordNotes: 'E4', duration: '8n' },\n    //   { time: '2n', chordNotes: 'G4', duration: '16n' },\n    //   { time: { '2n': 1, '8t': 1 }, chordNotes: 'B4', duration: '4n' }\n    // ])\n\n    var part = new Part(\n      function(time, event) {\n        // the events will be given to the callback with the time they occur\n        // synth.triggerAttackRelease(event.note, event.dur, time)\n        polySynth.triggerAttackRelease(event.chordNotes, event.duration, time)\n      },\n      [\n        { time: 0, chordNotes: track[0].chord, duration: '8n' },\n        {\n          time: { '4n': 1, '8n': 1 },\n          chordNotes: track[1].chord,\n          duration: '8n',\n        },\n        { time: '2n', chordNotes: track[2].chord, duration: '8n' },\n        {\n          time: { '2n': 1, '8t': 1 },\n          chordNotes: track[3].chord,\n          duration: '8n',\n        },\n      ]\n    )\n\n    console.log(track)\n\n    // start the part at the beginning of the Transport's timeline\n    part.start(0)\n\n    // loop the part 3 times\n    part.loop = 5\n    part.loopEnd = duration\n    // const chordNotes = Chord.chord(chord).notes.map(x => x + '4')\n    // console.log(`This chord ${chord} with notes ${chordNotes} is played for ${duration}.`)\n    // polySynth.triggerAttackRelease(chordNotes, duration)\n  }\n\n  var chordProgressionRow = []\n  for (let i = 0; i < track.length; i++) {\n    chordProgressionRow.push(\n      <Grid key={i} item xs={12 / track.length}>\n        <Paper\n          key={i}\n          style={{\n            textAlign: 'center',\n            color: 'grey',\n            padding: '20px',\n          }}\n          onClick={() => {\n            handlePlayChord(track[i].chord, '2n')\n          }}\n        >\n          Chord {track[i].chord} 2n\n        </Paper>\n      </Grid>\n    )\n  }\n\n  return (\n    <div>\n      <div className={{ flexGrow: 1 }}>\n        <Grid container spacing={1}>\n          <Grid container item xs={12} spacing={3}>\n            <React.Fragment>{chordProgressionRow}</React.Fragment>\n          </Grid>\n          {/* <Grid container item xs={12} spacing={3}>\n            <React.Fragment>\n              <Grid item xs={12 / track.length}>\n                <Paper style={{\n                  textAlign: 'center',\n                  color: 'grey',\n                  padding: '20px'\n                }} onClick={() => { handlePlayChordInLoop(track, \"1m\") }}>Play in Loop</Paper>\n              </Grid>\n            </React.Fragment>\n            <React.Fragment>\n              <Grid item xs={12 / track.length}>\n                <Paper style={{\n                  textAlign: 'center',\n                  color: 'grey',\n                  padding: '20px'\n                }} onClick={() => { Transport.toggle() }}>Play in Loop</Paper>\n              </Grid>\n            </React.Fragment>\n          </Grid> */}\n        </Grid>\n      </div>\n    </div>\n  )\n}\n\nexport default ChordTable\n","import React, { useState, useEffect } from 'react'\n\n// import PropTypes from 'prop-types'\n\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\n\n// import { Tonal, Scale, Progression, Mode, Chord, Key } from '@tonaljs/modules'\nimport { Scale } from '@tonaljs/modules'\n\nimport { Synth, PolySynth } from 'tone'\n\n// // create a synth and connect it to the master output (your speakers)\nconst synth = new Synth().toMaster()\n\n// a 4 voice Synth\nconst polySynth = new PolySynth(Synth).toDestination()\n\nfunction ScaleNotes (props) {\n  const [notes, setNotes] = useState([])\n\n  useEffect(() => {\n    const notes = Scale.scale(`${props.keySignature}4 ${props.scaleName}`).notes\n    setNotes(notes)\n  }, [props.keySignature])\n\n  function handlePlayNote (note, duration) {\n    console.log(`This note ${note} is played for ${duration}.`)\n    synth.triggerAttackRelease(note, duration)\n  }\n\n  var notesRow = []\n  for (let i = 0; i < notes.length; i++) {\n    notesRow.push(\n      <Grid key={i} item xs={12 / notes.length}>\n        <Paper key={i} style={{\n          textAlign: 'center',\n          color: 'grey',\n          padding: '20px'\n        }} onClick={() => { handlePlayNote(notes[i], \"8n\") }}>Note { notes[i] } 8n</Paper>\n      </Grid>\n    )\n  }\n\n  return (\n    <div>\n      <div className={{ flexGrow: 1 }}>\n        <Grid container spacing={1}>\n          <Grid container item xs={12} spacing={3}>\n            <React.Fragment>\n              {notesRow}\n            </React.Fragment>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  )\n}\n\nexport default ScaleNotes\n","import React, { useState, useEffect } from 'react'\n\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\n\n// import { Tonal, Scale, Progression, Mode, Chord, Key } from '@tonaljs/modules'\n\n// import MidiWriter from 'midi-writer-js'\n// import MidiPlayer from 'midi-player-js'\n\nimport { Synth, PolySynth } from 'tone'\n\n// // create a synth and connect it to the master output (your speakers)\nconst synth = new Synth().toMaster()\n\n// a 4 voice Synth\nconst polySynth = new PolySynth(Synth).toDestination()\n\nfunction BaseNotes(props) {\n  function handlePlayNote(note, duration) {\n    console.log(`This note ${note} is played for ${duration}.`)\n    synth.triggerAttackRelease(note, duration)\n  }\n\n  return (\n    <div className={{ flexGrow: 1 }}>\n      <Grid container spacing={1}>\n        <Grid container item xs={12} spacing={3}>\n          <React.Fragment>\n            <Grid item xs={3}>\n              <Paper\n                style={{\n                  textAlign: 'center',\n                  color: 'grey',\n                  padding: '20px',\n                }}\n                onClick={() => {\n                  handlePlayNote('C4', '8n')\n                }}\n              >\n                Note C4 8n\n              </Paper>\n            </Grid>\n            <Grid item xs={3}>\n              <Paper\n                style={{\n                  textAlign: 'center',\n                  color: 'grey',\n                  padding: '20px',\n                }}\n                onClick={() => {\n                  handlePlayNote('D4', '8n')\n                }}\n              >\n                Note D4 8n\n              </Paper>\n            </Grid>\n            <Grid item xs={3}>\n              <Paper\n                style={{\n                  textAlign: 'center',\n                  color: 'grey',\n                  padding: '20px',\n                }}\n                onClick={() => {\n                  handlePlayNote('E4', '8n')\n                }}\n              >\n                Note E4 8n\n              </Paper>\n            </Grid>\n            <Grid item xs={3}>\n              <Paper\n                style={{\n                  textAlign: 'center',\n                  color: 'grey',\n                  padding: '20px',\n                }}\n                onClick={() => {\n                  handlePlayNote('F4', '8n')\n                }}\n              >\n                Note F4 8n\n              </Paper>\n            </Grid>\n          </React.Fragment>\n        </Grid>\n        <Grid container item xs={12} spacing={3}>\n          <React.Fragment>\n            <Grid item xs={3}>\n              <Paper\n                style={{\n                  textAlign: 'center',\n                  color: 'grey',\n                  padding: '20px',\n                }}\n                onClick={() => {\n                  handlePlayNote('G4', '8n')\n                }}\n              >\n                Note G4 8n\n              </Paper>\n            </Grid>\n            <Grid item xs={3}>\n              <Paper\n                style={{\n                  textAlign: 'center',\n                  color: 'grey',\n                  padding: '20px',\n                }}\n                onClick={() => {\n                  handlePlayNote('A4', '8n')\n                }}\n              >\n                Note A4 8n\n              </Paper>\n            </Grid>\n            <Grid item xs={3}>\n              <Paper\n                style={{\n                  textAlign: 'center',\n                  color: 'grey',\n                  padding: '20px',\n                }}\n                onClick={() => {\n                  handlePlayNote('B4', '8n')\n                }}\n              >\n                Note B4 8n\n              </Paper>\n            </Grid>\n            <Grid item xs={3}>\n              <Paper\n                style={{\n                  textAlign: 'center',\n                  color: 'grey',\n                  padding: '20px',\n                }}\n                onClick={() => {\n                  handlePlayNote('C5', '8n')\n                }}\n              >\n                Note C5 8n\n              </Paper>\n            </Grid>\n          </React.Fragment>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default BaseNotes\n","import React, { useState } from 'react'\n\nimport ParameterPannel from '../components/ParameterPannel'\nimport ChordTable from '../components/ChordTable'\nimport ScaleNotes from '../components/ScaleNotes'\nimport BaseNotes from '../components/BaseNotes'\n\nfunction App () {\n  const [keySignature, setKeySignature] = useState('C')\n  const [progression, setProgression] = useState('VIm - IV - I - V')\n\n  function handleKeyChangeEvent (e) {\n    setKeySignature(e.target.value)\n  }\n\n  function handleProgressionChangeEvent (e) {\n    setProgression(e.target.value)\n  }\n\n  console.log('Key in App')\n  console.log(keySignature)\n\n  console.log('Progression in App')\n  console.log(progression)\n\n  return (\n    <div className='py2 px4 mx4 flex flex-row'>\n      <div className='py1 px2 flex flex-column'>\n        <h2>Choose your Key</h2>\n        <ParameterPannel keySignature={keySignature}\n          handleKeyChangeEvent={handleKeyChangeEvent}\n          progression={progression}\n          handleProgressionChangeEvent={handleProgressionChangeEvent}\n        />\n      </div>\n      <div className='py1 px2 flex flex-column'>\n        <h2>Basic 4 Chords Progressions {progression}</h2>\n        <ChordTable keySignature={keySignature} progression={progression.split(' - ')}/>\n        <h2>Major Scale Notes</h2>\n        <ScaleNotes keySignature={keySignature} scaleName={'major'}/>\n        <h2>Minor Scale Notes</h2>\n        <ScaleNotes keySignature={keySignature} scaleName={'minor'}/>\n        <h2>Basic C Major Scale Notes</h2>\n        <BaseNotes/>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './containers/App'\n// import * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App/>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister()\n"],"sourceRoot":""}